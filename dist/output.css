/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
.pointer-events-none {
  pointer-events: none;
}
.absolute {
  position: absolute;
}
.fixed {
  position: fixed;
}
.relative {
  position: relative;
}
.-top-1\/2 {
  top: calc(calc(1/2 * 100%) * -1);
}
.top-1\/2 {
  top: calc(1/2 * 100%);
}
.right-\[10\%\] {
  right: 10%;
}
.-left-1\/2 {
  left: calc(calc(1/2 * 100%) * -1);
}
.left-1\/2 {
  left: calc(1/2 * 100%);
}
.left-\[10\%\] {
  left: 10%;
}
.-z-0 {
  z-index: calc(0 * -1);
}
.-z-10 {
  z-index: calc(10 * -1);
}
.-z-\[1\] {
  z-index: calc(1 * -1);
}
.z-10 {
  z-index: 10;
}
.z-\[1000\] {
  z-index: 1000;
}
.float-right {
  float: right;
}
.container {
  width: 100%;
}
.mx-auto {
  margin-inline: auto;
}
.my-\[5\%\] {
  margin-block: 5%;
}
.block {
  display: block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.inline {
  display: inline;
}
.inline-block {
  display: inline-block;
}
.h-\[200\%\] {
  height: 200%;
}
.h-full {
  height: 100%;
}
.min-h-screen {
  min-height: 100vh;
}
.w-\[90\%\] {
  width: 90%;
}
.w-\[200\%\] {
  width: 200%;
}
.w-full {
  width: 100%;
}
.max-w-\[32rem\] {
  max-width: 32rem;
}
.max-w-\[72rem\] {
  max-width: 72rem;
}
.max-w-none {
  max-width: none;
}
.-translate-x-1\/2 {
  --tw-translate-x: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.-translate-y-1\/2 {
  --tw-translate-y: calc(calc(1/2 * 100%) * -1);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
.rotate-45 {
  rotate: 45deg;
}
.transform {
  transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
}
.animate-\[float_3s_ease-in-out_infinite\] {
  animation: float 3s ease-in-out infinite;
}
.animate-\[float_3s_ease-in-out_infinite_1s\] {
  animation: float 3s ease-in-out infinite 1s;
}
.animate-\[float_3s_ease-in-out_infinite_2s\] {
  animation: float 3s ease-in-out infinite 2s;
}
.animate-\[glow_2s_ease-in-out_infinite_alternate\] {
  animation: glow 2s ease-in-out infinite alternate;
}
.animate-\[lightning_3s_infinite\] {
  animation: lightning 3s infinite;
}
.animate-\[pulse_2s_infinite\] {
  animation: pulse 2s infinite;
}
.cursor-pointer {
  cursor: pointer;
}
.list-none {
  list-style-type: none;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.flex-wrap {
  flex-wrap: wrap;
}
.items-center {
  align-items: center;
}
.items-stretch {
  align-items: stretch;
}
.justify-center {
  justify-content: center;
}
.overflow-hidden {
  overflow: hidden;
}
.overflow-x-hidden {
  overflow-x: hidden;
}
.rounded-full {
  border-radius: calc(infinity * 1px);
}
.border-2 {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-4 {
  border-style: var(--tw-border-style);
  border-width: 4px;
}
.border-l-4 {
  border-left-style: var(--tw-border-style);
  border-left-width: 4px;
}
.border-none {
  --tw-border-style: none;
  border-style: none;
}
.border-\[\#4ecdc4\] {
  border-color: #4ecdc4;
}
.border-\[\#4ecdc4\]\/30 {
  border-color: color-mix(in oklab, #4ecdc4 30%, transparent);
}
.border-\[\#ff6b6b\] {
  border-color: #ff6b6b;
}
.border-\[\#ffd93d\] {
  border-color: #ffd93d;
}
.border-\[\#ffd93d\]\/30 {
  border-color: color-mix(in oklab, #ffd93d 30%, transparent);
}
.bg-\[\#0a0a0a\] {
  background-color: #0a0a0a;
}
.bg-\[\#4ecdc4\] {
  background-color: #4ecdc4;
}
.bg-\[\#ff6b6b\] {
  background-color: #ff6b6b;
}
.bg-transparent {
  background-color: transparent;
}
.bg-gradient-to-b {
  --tw-gradient-position: to bottom in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-br {
  --tw-gradient-position: to bottom right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.bg-gradient-to-r {
  --tw-gradient-position: to right in oklab;
  background-image: linear-gradient(var(--tw-gradient-stops));
}
.from-\[\#4ecdc4\]\/10 {
  --tw-gradient-from: color-mix(in oklab, #4ecdc4 10%, transparent);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#4ecdc4\]\/20 {
  --tw-gradient-from: color-mix(in oklab, #4ecdc4 20%, transparent);
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#667eea\] {
  --tw-gradient-from: #667eea;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#ff6b6b\] {
  --tw-gradient-from: #ff6b6b;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-\[\#ffd93d\] {
  --tw-gradient-from: #ffd93d;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.from-transparent {
  --tw-gradient-from: transparent;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.via-\[\#4ecdc4\] {
  --tw-gradient-via: #4ecdc4;
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.via-\[\#4ecdc4\]\/5 {
  --tw-gradient-via: color-mix(in oklab, #4ecdc4 5%, transparent);
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.via-\[\#ff6b6b\] {
  --tw-gradient-via: #ff6b6b;
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.via-\[\#ffd93d\] {
  --tw-gradient-via: #ffd93d;
  --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-via-stops);
}
.to-\[\#4ecdc4\] {
  --tw-gradient-to: #4ecdc4;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#764ba2\] {
  --tw-gradient-to: #764ba2;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-\[\#ff6b6b\] {
  --tw-gradient-to: #ff6b6b;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.to-transparent {
  --tw-gradient-to: transparent;
  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
}
.text-center {
  text-align: center;
}
.font-\[\'Montserrat\'\] {
  font-family: 'Montserrat';
}
.font-\[\'Russo_One\'\] {
  font-family: 'Russo One';
}
.text-\[\#4ecdc4\] {
  color: #4ecdc4;
}
.text-\[\#ffd93d\] {
  color: #ffd93d;
}
.uppercase {
  text-transform: uppercase;
}
.italic {
  font-style: italic;
}
.line-through {
  text-decoration-line: line-through;
}
.no-underline {
  text-decoration-line: none;
}
.opacity-0 {
  opacity: 0%;
}
.opacity-30 {
  opacity: 30%;
}
.opacity-80 {
  opacity: 80%;
}
.opacity-90 {
  opacity: 90%;
}
.shadow-\[\#4ecdc4\]\/30 {
  --tw-shadow-color: color-mix(in srgb, #4ecdc4 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, #4ecdc4 30%, transparent) var(--tw-shadow-alpha), transparent);
  }
}
.shadow-\[\#ff6b6b\]\/30 {
  --tw-shadow-color: color-mix(in srgb, #ff6b6b 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, #ff6b6b 30%, transparent) var(--tw-shadow-alpha), transparent);
  }
}
.shadow-\[\#ffd93d\]\/30 {
  --tw-shadow-color: color-mix(in srgb, #ffd93d 30%, transparent);
  @supports (color: color-mix(in lab, red, red)) {
    --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, #ffd93d 30%, transparent) var(--tw-shadow-alpha), transparent);
  }
}
.transition {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-all {
  transition-property: all;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.transition-colors {
  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.duration-400 {
  --tw-duration: 400ms;
  transition-duration: 400ms;
}
.duration-500 {
  --tw-duration: 500ms;
  transition-duration: 500ms;
}
.duration-600 {
  --tw-duration: 600ms;
  transition-duration: 600ms;
}
.duration-\[400ms\] {
  --tw-duration: 400ms;
  transition-duration: 400ms;
}
.duration-\[600ms\] {
  --tw-duration: 600ms;
  transition-duration: 600ms;
}
.group-hover\:opacity-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.before\:absolute {
  &::before {
    content: var(--tw-content);
    position: absolute;
  }
}
.before\:content-\[\'⚡\'\] {
  &::before {
    content: var(--tw-content);
    --tw-content: '⚡';
    content: var(--tw-content);
  }
}
.hover\:scale-105 {
  &:hover {
    @media (hover: hover) {
      --tw-scale-x: 105%;
      --tw-scale-y: 105%;
      --tw-scale-z: 105%;
      scale: var(--tw-scale-x) var(--tw-scale-y);
    }
  }
}
.hover\:bg-\[\#ff6b6b\] {
  &:hover {
    @media (hover: hover) {
      background-color: #ff6b6b;
    }
  }
}
.hover\:text-\[\#0a0a0a\] {
  &:hover {
    @media (hover: hover) {
      color: #0a0a0a;
    }
  }
}
.hover\:text-\[\#4ecdc4\] {
  &:hover {
    @media (hover: hover) {
      color: #4ecdc4;
    }
  }
}
.hover\:text-\[\#ff6b6b\] {
  &:hover {
    @media (hover: hover) {
      color: #ff6b6b;
    }
  }
}
@layer base {
  :root {
    --color-primary: #4ecdc4;
    --color-secondary: #ff6b6b;
    --color-accent: #ffd93d;
    --color-dark-bg: #0a0a0a;
  }
  body {
    background-color: #0a0a0a;
    color: white;
  }
}
@layer components {
  .text-white {
    color: white;
  }
  .text-gray-800 {
    color: rgb(31 41 55);
  }
  .text-gray-600 {
    color: rgb(75 85 99);
  }
  .text-white\/50 {
    color: rgb(255 255 255 / 0.5);
  }
  .text-white\/70 {
    color: rgb(255 255 255 / 0.7);
  }
  .bg-white\/5 {
    background-color: rgb(255 255 255 / 0.05);
  }
  .bg-white\/10 {
    background-color: rgb(255 255 255 / 0.1);
  }
  .bg-white\/90 {
    background-color: rgb(255 255 255 / 0.9);
  }
  .bg-white\/2 {
    background-color: rgb(255 255 255 / 0.02);
  }
  .bg-black\/50 {
    background-color: rgb(0 0 0 / 0.5);
  }
  .bg-black\/80 {
    background-color: rgb(0 0 0 / 0.8);
  }
  .bg-gray-900 {
    background-color: rgb(17 24 39);
  }
  .bg-white {
    background-color: white;
  }
  .border-white {
    border-color: white;
  }
  .border-white\/10 {
    border-color: rgb(255 255 255 / 0.1);
  }
  .border-white\/20 {
    border-color: rgb(255 255 255 / 0.2);
  }
  .border-white\/30 {
    border-color: rgb(255 255 255 / 0.3);
  }
  .backdrop-blur-xl {
    backdrop-filter: blur(24px);
  }
  .backdrop-blur-md {
    backdrop-filter: blur(12px);
  }
  .hover\:bg-white:hover {
    background-color: white;
  }
  .hover\:scale-105:hover {
    transform: scale(1.05);
  }
  .hover\:shadow-xl:hover {
    box-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
  }
  .hover\:shadow-lg:hover {
    box-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  }
  .hover\:shadow-2xl:hover {
    box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
  }
  .hover\:-translate-y-1:hover {
    transform: translateY(-0.25rem);
  }
  .hover\:-translate-y-3:hover {
    transform: translateY(-0.75rem);
  }
  .hover\:-translate-y-4:hover {
    transform: translateY(-1rem);
  }
  .hover\:-translate-y-6:hover {
    transform: translateY(-1.5rem);
  }
  .hover\:border-white\/30:hover {
    border-color: rgb(255 255 255 / 0.3);
  }
  .group:hover .group-hover\:translate-x-8 {
    transform: translateX(2rem);
  }
  .group:hover .group-hover\:translate-y-8 {
    transform: translateY(2rem);
  }
  @media (min-width: 768px) {
    .md\:text-7xl {
      font-size: 4.5rem;
      line-height: 1;
    }
    .md\:text-6xl {
      font-size: 3.75rem;
      line-height: 1;
    }
    .md\:text-2xl {
      font-size: 1.5rem;
      line-height: 2rem;
    }
    .md\:flex-row {
      flex-direction: row;
    }
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
    .md\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  @media (min-width: 1024px) {
    .lg\:text-8xl {
      font-size: 6rem;
      line-height: 1;
    }
    .lg\:text-3xl {
      font-size: 1.875rem;
      line-height: 2.25rem;
    }
    .lg\:flex-row {
      flex-direction: row;
    }
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
    .lg\:grid-cols-4 {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
    .lg\:block {
      display: block;
    }
    .lg\:w-\[20rem\] {
      width: 20rem;
    }
    .lg\:-translate-y-2 {
      transform: translateY(-0.5rem);
    }
  }
  .gradient-text {
    background: linear-gradient(45deg, #4ecdc4, #ff6b6b, #ffd93d);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .lightning-bg {
    background: repeating-linear-gradient( 90deg, transparent, transparent 100px, rgba(255, 255, 0, 0.03) 100px, rgba(255, 255, 0, 0.03) 101px );
  }
  .power-bar {
    background: linear-gradient(90deg, #4ecdc4, #ff6b6b);
  }
  .speech-bubble {
    position: relative;
  }
  .speech-bubble::after {
    content: '';
    position: absolute;
    bottom: -8px;
    left: 30px;
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid rgba(255, 255, 255, 0.9);
  }
  .thought-bubble {
    position: relative;
  }
  .thought-bubble::before {
    content: '💭';
    position: absolute;
    bottom: -25px;
    right: 20px;
    font-size: 30px;
    opacity: 0.5;
  }
}
@layer utilities {
  .text-shadow-glow {
    text-shadow: 0 0 30px rgba(255, 107, 107, 0.5);
  }
  .px-5 {
    padding-left: 1.25rem;
    padding-right: 1.25rem;
  }
  .py-24 {
    padding-top: 6rem;
    padding-bottom: 6rem;
  }
  .p-10 {
    padding: 2.5rem;
  }
  .p-8 {
    padding: 2rem;
  }
  .p-5 {
    padding: 1.25rem;
  }
  .p-3 {
    padding: 0.75rem;
  }
  .p-1 {
    padding: 0.25rem;
  }
  .pl-8 {
    padding-left: 2rem;
  }
  .px-10 {
    padding-left: 2.5rem;
    padding-right: 2.5rem;
  }
  .py-4 {
    padding-top: 1rem;
    padding-bottom: 1rem;
  }
  .py-2 {
    padding-top: 0.5rem;
    padding-bottom: 0.5rem;
  }
  .py-12 {
    padding-top: 3rem;
    padding-bottom: 3rem;
  }
  .mb-16 {
    margin-bottom: 4rem;
  }
  .mb-8 {
    margin-bottom: 2rem;
  }
  .mb-5 {
    margin-bottom: 1.25rem;
  }
  .mb-10 {
    margin-bottom: 2.5rem;
  }
  .mb-4 {
    margin-bottom: 1rem;
  }
  .mb-2 {
    margin-bottom: 0.5rem;
  }
  .mb-1 {
    margin-bottom: 0.25rem;
  }
  .my-8 {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  .mt-24 {
    margin-top: 6rem;
  }
  .text-6xl {
    font-size: 3.75rem;
    line-height: 1;
  }
  .text-5xl {
    font-size: 3rem;
    line-height: 1;
  }
  .text-4xl {
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  .text-3xl {
    font-size: 1.875rem;
    line-height: 2.25rem;
  }
  .text-2xl {
    font-size: 1.5rem;
    line-height: 2rem;
  }
  .text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
  .text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
  .text-base {
    font-size: 1rem;
    line-height: 1.5rem;
  }
  .text-sm {
    font-size: 0.875rem;
    line-height: 1.25rem;
  }
  .text-xs {
    font-size: 0.75rem;
    line-height: 1rem;
  }
  .text-8xl {
    font-size: 6rem;
    line-height: 1;
  }
  .font-bold {
    font-weight: 700;
  }
  .font-black {
    font-weight: 900;
  }
  .rounded-3xl {
    border-radius: 1.5rem;
  }
  .rounded-2xl {
    border-radius: 1rem;
  }
  .rounded-lg {
    border-radius: 0.5rem;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    box-shadow: var(--tw-shadow);
  }
  .shadow-xl {
    --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    box-shadow: var(--tw-shadow);
  }
  .shadow-2xl {
    --tw-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    box-shadow: var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    box-shadow: var(--tw-shadow);
  }
  .drop-shadow-2xl {
    filter: drop-shadow(0 25px 25px rgb(0 0 0 / 0.15));
  }
  .w-12 {
    width: 3rem;
  }
  .h-12 {
    height: 3rem;
  }
  .h-1 {
    height: 0.25rem;
  }
  .h-5 {
    height: 1.25rem;
  }
  .h-0 {
    height: 0px;
  }
  .top-0 {
    top: 0px;
  }
  .left-0 {
    left: 0px;
  }
  .-top-5 {
    top: -1.25rem;
  }
  .right-5 {
    right: 1.25rem;
  }
  .-top-3 {
    top: -0.75rem;
  }
  .right-2 {
    right: 0.5rem;
  }
  .bottom-0 {
    bottom: 0px;
  }
  .left-30px {
    left: 30px;
  }
  .left-20px {
    left: 20px;
  }
  .right-20px {
    right: 20px;
  }
  .bottom--25px {
    bottom: -25px;
  }
  .bottom--8px {
    bottom: -8px;
  }
  .gap-10 {
    gap: 2.5rem;
  }
  .gap-5 {
    gap: 1.25rem;
  }
  .gap-8 {
    gap: 2rem;
  }
  .tracking-wider {
    letter-spacing: 0.05em;
  }
  .space-y-3 > :not([hidden]) ~ :not([hidden]) {
    margin-top: 0.75rem;
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-content {
  syntax: "*";
  initial-value: "";
  inherits: false;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-border-style: solid;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-content: "";
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
    }
  }
}
